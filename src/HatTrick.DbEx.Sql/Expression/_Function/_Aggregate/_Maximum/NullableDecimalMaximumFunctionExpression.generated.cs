using System;


namespace HatTrick.DbEx.Sql.Expression
{
    public partial class NullableDecimalMaximumFunctionExpression
    {
        #region implicit operators
        public static implicit operator SelectExpression<decimal?>(NullableDecimalMaximumFunctionExpression a) => new SelectExpression<decimal?>(new ExpressionContainer(a));
        public static implicit operator NullableDecimalExpressionMediator(NullableDecimalMaximumFunctionExpression a) => new NullableDecimalExpressionMediator(new ExpressionContainer(a));
        public static implicit operator OrderByExpression(NullableDecimalMaximumFunctionExpression a) => new OrderByExpression(new ExpressionContainer(a), OrderExpressionDirection.ASC);
        #endregion

        #region arithmetic operators
        #region TValue
        #region byte
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, byte b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, byte b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, byte b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, byte b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, byte b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(byte a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(byte a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(byte a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(byte a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(byte a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, byte? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte?>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, byte? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte?>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, byte? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte?>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, byte? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte?>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, byte? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<byte?>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(byte? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(byte? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(byte? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(byte? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(byte? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<byte?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));
        
        #endregion

        #region decimal
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, decimal b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, decimal b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, decimal b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, decimal b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, decimal b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(decimal a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(decimal a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(decimal a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(decimal a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(decimal a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, decimal? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, decimal? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, decimal? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, decimal? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, decimal? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(decimal? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(decimal? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(decimal? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(decimal? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(decimal? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));
        
        #endregion

        #region double
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, double b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, double b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, double b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, double b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, double b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(double a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(double a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(double a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(double a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(double a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, double? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double?>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, double? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double?>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, double? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double?>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, double? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double?>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, double? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<double?>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(double? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(double? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(double? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(double? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(double? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<double?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));
        
        #endregion

        #region float
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, float b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, float b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, float b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, float b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, float b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(float a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(float a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(float a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(float a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(float a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, float? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float?>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, float? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float?>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, float? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float?>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, float? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float?>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, float? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<float?>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(float? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(float? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(float? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(float? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(float? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<float?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));
        
        #endregion

        #region short
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, short b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, short b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, short b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, short b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, short b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(short a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(short a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(short a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(short a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(short a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, short? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short?>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, short? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short?>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, short? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short?>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, short? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short?>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, short? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<short?>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(short? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(short? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(short? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(short? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(short? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<short?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));
        
        #endregion

        #region int
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, int b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, int b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, int b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, int b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, int b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(int a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(int a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(int a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(int a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(int a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, int? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int?>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, int? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int?>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, int? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int?>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, int? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int?>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, int? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<int?>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(int? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(int? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(int? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(int? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(int? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<int?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));
        
        #endregion

        #region long
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, long b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, long b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, long b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, long b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, long b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(long a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(long a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(long a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(long a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(long a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, long? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long?>(b)), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, long? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long?>(b)), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, long? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long?>(b)), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, long? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long?>(b)), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, long? b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<long?>(b)), ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(long? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(long? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(long? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(long? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(long? a, NullableDecimalMaximumFunctionExpression b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(new LiteralExpression<long?>(a)), new ExpressionContainer(b), ArithmeticExpressionOperator.Modulo)));
        
        #endregion

        #endregion

        #region mediator
        #region byte
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, ByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, ByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, ByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, ByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, ByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, NullableByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, NullableByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, NullableByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, NullableByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, NullableByteExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));
        #endregion

        #region decimal
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));
        #endregion

        #region double
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, DoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, DoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, DoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, DoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, DoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, NullableDoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, NullableDoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, NullableDoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, NullableDoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, NullableDoubleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));
        #endregion

        #region float
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, SingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, SingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, SingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, SingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, SingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, NullableSingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, NullableSingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, NullableSingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, NullableSingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, NullableSingleExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));
        #endregion

        #region short
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, Int16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, Int16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, Int16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, Int16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, Int16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, NullableInt16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, NullableInt16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, NullableInt16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, NullableInt16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, NullableInt16ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));
        #endregion

        #region int
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, Int32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, Int32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, Int32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, Int32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, Int32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, NullableInt32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, NullableInt32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, NullableInt32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, NullableInt32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, NullableInt32ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));
        #endregion

        #region long
        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, Int64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, Int64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, Int64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, Int64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, Int64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));

        public static NullableDecimalExpressionMediator operator +(NullableDecimalMaximumFunctionExpression a, NullableInt64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Add)));
        public static NullableDecimalExpressionMediator operator -(NullableDecimalMaximumFunctionExpression a, NullableInt64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Subtract)));
        public static NullableDecimalExpressionMediator operator *(NullableDecimalMaximumFunctionExpression a, NullableInt64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Multiply)));
        public static NullableDecimalExpressionMediator operator /(NullableDecimalMaximumFunctionExpression a, NullableInt64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Divide)));
        public static NullableDecimalExpressionMediator operator %(NullableDecimalMaximumFunctionExpression a, NullableInt64ExpressionMediator b) => new NullableDecimalExpressionMediator(new ExpressionContainer(new ArithmeticExpression(new ExpressionContainer(a), b.Expression, ArithmeticExpressionOperator.Modulo)));
        #endregion

        #endregion
        #endregion

        #region filter operators
        #region TValue
        #region decimal
        public static FilterExpression<decimal> operator ==(NullableDecimalMaximumFunctionExpression a, decimal b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), FilterExpressionOperator.Equal);
        public static FilterExpression<decimal> operator !=(NullableDecimalMaximumFunctionExpression a, decimal b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), FilterExpressionOperator.NotEqual);
        public static FilterExpression<decimal> operator <(NullableDecimalMaximumFunctionExpression a, decimal b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), FilterExpressionOperator.LessThan);
        public static FilterExpression<decimal> operator <=(NullableDecimalMaximumFunctionExpression a, decimal b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), FilterExpressionOperator.LessThanOrEqual);
        public static FilterExpression<decimal> operator >(NullableDecimalMaximumFunctionExpression a, decimal b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), FilterExpressionOperator.GreaterThan);
        public static FilterExpression<decimal> operator >=(NullableDecimalMaximumFunctionExpression a, decimal b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal>(b)), FilterExpressionOperator.GreaterThanOrEqual);

        public static FilterExpression<decimal> operator ==(decimal a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), FilterExpressionOperator.Equal);
        public static FilterExpression<decimal> operator !=(decimal a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), FilterExpressionOperator.NotEqual);
        public static FilterExpression<decimal> operator <(decimal a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), FilterExpressionOperator.LessThan);
        public static FilterExpression<decimal> operator <=(decimal a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), FilterExpressionOperator.LessThanOrEqual);
        public static FilterExpression<decimal> operator >(decimal a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), FilterExpressionOperator.GreaterThan);
        public static FilterExpression<decimal> operator >=(decimal a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal>(a)), new ExpressionContainer(b), FilterExpressionOperator.GreaterThanOrEqual);

        public static FilterExpression<decimal> operator ==(NullableDecimalMaximumFunctionExpression a, decimal? b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), FilterExpressionOperator.Equal);
        public static FilterExpression<decimal> operator !=(NullableDecimalMaximumFunctionExpression a, decimal? b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), FilterExpressionOperator.NotEqual);
        public static FilterExpression<decimal> operator <(NullableDecimalMaximumFunctionExpression a, decimal? b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), FilterExpressionOperator.LessThan);
        public static FilterExpression<decimal> operator <=(NullableDecimalMaximumFunctionExpression a, decimal? b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), FilterExpressionOperator.LessThanOrEqual);
        public static FilterExpression<decimal> operator >(NullableDecimalMaximumFunctionExpression a, decimal? b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), FilterExpressionOperator.GreaterThan);
        public static FilterExpression<decimal> operator >=(NullableDecimalMaximumFunctionExpression a, decimal? b) => new FilterExpression<decimal>(new ExpressionContainer(a), new ExpressionContainer(new LiteralExpression<decimal?>(b)), FilterExpressionOperator.GreaterThanOrEqual);

        public static FilterExpression<decimal> operator ==(decimal? a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), FilterExpressionOperator.Equal);
        public static FilterExpression<decimal> operator !=(decimal? a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), FilterExpressionOperator.NotEqual);
        public static FilterExpression<decimal> operator <(decimal? a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), FilterExpressionOperator.LessThan);
        public static FilterExpression<decimal> operator <=(decimal? a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), FilterExpressionOperator.LessThanOrEqual);
        public static FilterExpression<decimal> operator >(decimal? a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), FilterExpressionOperator.GreaterThan);
        public static FilterExpression<decimal> operator >=(decimal? a, NullableDecimalMaximumFunctionExpression b) => new FilterExpression<decimal>(new ExpressionContainer(new LiteralExpression<decimal?>(a)), new ExpressionContainer(b), FilterExpressionOperator.GreaterThanOrEqual);
        #endregion
        #endregion

        #region mediator
        public static FilterExpression<decimal> operator ==(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new FilterExpression<decimal>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.Equal);
        public static FilterExpression<decimal> operator !=(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new FilterExpression<decimal>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.NotEqual);
        public static FilterExpression<decimal> operator <(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new FilterExpression<decimal>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.LessThan);
        public static FilterExpression<decimal> operator <=(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new FilterExpression<decimal>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.LessThanOrEqual);
        public static FilterExpression<decimal> operator >(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new FilterExpression<decimal>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.GreaterThan);
        public static FilterExpression<decimal> operator >=(NullableDecimalMaximumFunctionExpression a, DecimalExpressionMediator b) => new FilterExpression<decimal>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.GreaterThanOrEqual);

        public static FilterExpression<decimal?> operator ==(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new FilterExpression<decimal?>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.Equal);
        public static FilterExpression<decimal?> operator !=(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new FilterExpression<decimal?>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.NotEqual);
        public static FilterExpression<decimal?> operator <(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new FilterExpression<decimal?>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.LessThan);
        public static FilterExpression<decimal?> operator <=(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new FilterExpression<decimal?>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.LessThanOrEqual);
        public static FilterExpression<decimal?> operator >(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new FilterExpression<decimal?>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.GreaterThan);
        public static FilterExpression<decimal?> operator >=(NullableDecimalMaximumFunctionExpression a, NullableDecimalExpressionMediator b) => new FilterExpression<decimal?>(new ExpressionContainer(a), b.Expression, FilterExpressionOperator.GreaterThanOrEqual);
        #endregion
        #endregion
    }
}
