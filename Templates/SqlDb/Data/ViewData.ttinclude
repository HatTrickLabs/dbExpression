<#+
public void WriteViewDataPackages(SqlModel model, string namespaceRoot)
{
#>
using System;

<#+  
foreach (string schema in TemplateSvc.GetDistinctSchemas(model.Entities))
{
	if (!model.Entities.Any(e => e.Schema == schema && (e as SqlEntity).SqlEntityType == EntityType.View))
	{ continue; }
#>
namespace <#= namespaceRoot #>.<#= model.Name #>.<#= (TemplateSvc.TargetDb == "mssql") ? schema : "db" #>.Data
{
<#+  
foreach (SqlEntity entity in model.Entities.FindAll(e => e.Schema == schema))
{
	if (entity.IsIgnored || entity.SqlEntityType != EntityType.View) { continue; }
#>
	#region <#= TemplateSvc.InsertSpaceOnCapitalization(entity.Name).ToLower() #>
	[Serializable]
	public partial class <#= entity.Name #>
    {
<#+ 
foreach (SqlField field in entity.Fields)
{
	if (field.IsIgnored) { continue; }
#>
        public <#= field.AssemblyTypeShorthandText #> <#= field.Name #> { get; set; }
<#+
}
#>
    }
	#endregion
<#+
}
#>
}
<#+
}
#>
<#+
}
#>