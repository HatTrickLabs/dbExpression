using System;

namespace HatTrick.DbEx.Sql.Expression
{{
    public partial class {Type.Name}{FunctionName}FunctionExpression :
        {FunctionName}FunctionExpression<{Type.Alias}>,
        IEquatable<{Type.Name}{FunctionName}FunctionExpression>
    {{
        #region constructors
        private {Type.Name}{FunctionName}FunctionExpression()
        {{
        }}

        public {Type.Name}{FunctionName}FunctionExpression(ExpressionContainer expression, bool isDistinct) : base(expression, isDistinct)
        {{
        }}
        #endregion

        #region as
        public new {Type.Name}{FunctionName}FunctionExpression As(string alias)
        {{
            base.As(alias);
            return this;
        }}
        #endregion

        #region equals
        public bool Equals({Type.Name}{FunctionName}FunctionExpression obj)
            => obj is {Type.Name}{FunctionName}FunctionExpression && base.Equals(obj);

        public override bool Equals(object obj)
            => obj is {Type.Name}{FunctionName}FunctionExpression exp && base.Equals(exp);

        public override int GetHashCode()
            => base.GetHashCode();
        #endregion
    }}
}}
