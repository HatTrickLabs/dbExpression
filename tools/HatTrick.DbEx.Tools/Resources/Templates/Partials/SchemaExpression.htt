{?var:identifierArgName = ("identifier", $.SchemaExpression) => GetSchemaArgName}
{?var:identifierInterpolationArgName = ("{{x}}", "x", :identifierArgName) => Replace}
    #region {$.SchemaExpression.Name} schema expression
    public class {$.SchemaExpression.Name}SchemaExpression : SchemaExpression
    {{
        #region interface
        {#each $.Entities}
        public readonly {$.EntityExpression.Name}Entity {$.EntityExpression.Name};
		{/each}
        #endregion

        #region constructors
        public {$.SchemaExpression.Name}SchemaExpression(int {:identifierArgName}) : base({:identifierArgName})
        {{
            {#each $.Entities}
            Attributes.Entities.Add({$.EntityExpression.Name} = new {$.EntityExpression.Name}Entity({$.Identifier}, "{$.EntityExpression.Name}", this));
            {/each}
        }}
        #endregion
    }}
    #endregion