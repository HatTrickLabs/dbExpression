{?var:isNullableEnabled = $.FieldExpression.LanguageFeatures.Nullable.IsFeatureEnabled}
{?var:identifierArgName = ("identifier", $.FieldExpression) => GetFieldArgName}
{?var:nameArgName = ("name", $.FieldExpression) => GetFieldArgName}
{?var:entityArgName = ("entity", $.FieldExpression) => GetFieldArgName}
{?var:aliasArgName = ("alias", $.FieldExpression) => GetFieldArgName}
{?var:identifierInterpolationArgName = ("{{x}}", "x", :identifierArgName) => Replace}
        #region {($.FieldExpression.Name) => InsertSpaceOnCapitalizationAndToLower} field expression
        public partial class {$.FieldExpression.Name}Field : {$.FieldExpression.FieldExpressionTypeName}
        {{
            #region constructors
            public {$.FieldExpression.Name}Field(string {:identifierArgName}, string {:nameArgName}, Table {:entityArgName}) : base({:identifierArgName}, {:nameArgName}, {:entityArgName})
            {{

            }}
            #endregion

            #region set
            {#each $.FieldExpression.AssignmentMethodParameters}
            public AssignmentExpression Set({$.Left} value) => new AssignmentExpression(this, {$.Right});
            {/each}
            #endregion
        }}
        #endregion
