    #region runtime db
    public abstract partial class {$.DatabaseExpression.Name}RuntimeSqlDatabase : IRuntimeSqlDatabase, IExpressionListProvider<SchemaExpression>
    {{
        #region internals
        protected static readonly MsSqlQueryExpressionBuilderFactory expressionBuilderFactory = new MsSqlQueryExpressionBuilderFactory();
        protected static readonly IList<SchemaExpression> schemas = new List<SchemaExpression>();
        protected static RuntimeSqlDatabaseConfiguration configuration => configurationFactory.CreateConfiguration() ?? throw new DbExpressionConfigurationException($"Configuration factory returned a null value for configuration ({{nameof(RuntimeSqlDatabaseConfiguration)}}).  Cannot build and execute queries without valid configuration.");
        private static IRuntimeSqlDatabaseConfigurationFactory configurationFactory;
        #endregion

        #region interface
        IEnumerable<SchemaExpression> IExpressionListProvider<SchemaExpression>.Expressions => schemas;
        #endregion

        #region methods
        void IRuntimeSqlDatabase.UseConfigurationFactory(IRuntimeSqlDatabaseConfigurationFactory configurationFactory)
            => {$.DatabaseExpression.Name}RuntimeSqlDatabase.configurationFactory = configurationFactory ?? throw new ArgumentNullException(nameof(configurationFactory));
        #endregion
    }}
    #endregion