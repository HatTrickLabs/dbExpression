//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using DbExpression.{$.Platform.Key};
using DbExpression.{$.Platform.Key}.Builder;
using DbExpression.{$.Platform.Key}.Builder.v{$.Platform.Version};
using DbExpression.Sql;
#if !NET7_0_OR_GREATER
using DbExpression.Sql.Attribute;
#endif
using DbExpression.Sql.Builder;
using DbExpression.Sql.Connection;
using DbExpression.Sql.Executor;
using DbExpression.Sql.Expression;
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Dynamic;
using System.Linq;
{$.LanguageFeatures.Nullable.Directive}
#pragma warning disable IDE1006 // Naming Styles
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#pragma warning disable CA1034 // Nested types should not be visible
namespace {$.DatabaseExpression.NamespaceRoot}DataService
{{
	{#each $.Schemas}
	using {$.SchemaExpression.NamespaceRoot}DataService;
	{/each}
	{#each $.Schemas}
	using _{$.SchemaExpression.Name}DataService = {$.SchemaExpression.NamespaceRoot}DataService;
	{/each}

{#if $.IncludeStaticRuntime}
{>("Db") => GetTemplatePartial+}
{/if}

{>("RuntimeDb") => GetTemplatePartial+}

}}

{#each $.Schemas}
namespace {$.SchemaExpression.NamespaceRoot}DataService
{{
	using {$.SchemaExpression.NamespaceRoot}Data;
	using System.Data;

{>("SchemaExpression") => GetTemplatePartial+}

	{#each $.Entities}
{>("EntityExpression") => GetTemplatePartial+}

    {-/each-}
	{-#each $.StoredProcedures}
{>("StoredProcedureExpression") => GetTemplatePartial+}

	{/each}
{>("Schema") => GetTemplatePartial+}
}}
{/if}
{/each}
#pragma warning restore IDE1006 // Naming Styles
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member
#pragma warning restore CA1034 // Nested types should not be visible
